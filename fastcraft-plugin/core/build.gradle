group 'net.benwoodworth'
version '3.x'

def env = System.getenv()
if (env.containsKey('CIRCLECI')) {
    if (env.containsKey('CIRCLE_TAG')) {
        def tag = env['CIRCLE_TAG']
        if (tag.startsWith("v")) {
            version = tag.substring(1)
        } else {
            version += "-$tag"
        }
    } else {
        version += "-" + env['CIRCLE_SHA1'].substring(0, 7)
    }
}

def plugin_id = 'fastcraft'
def plugin_name = 'FastCraft'
def plugin_author = 'Kepler'
def plugin_description = 'Redefines crafting in Minecraft'
def plugin_version = version
def plugin_website = 'https://github.com/BenWoodworth/FastCraft'

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.spongepowered.plugin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    ext {
        java_target = '1.8'

        version_gradle = '4.2.1'

        version_kotlin = '1.2.30'
        version_spongegradle = '0.8.1'
        version_shadow = '2.0.2'

        version_bukkit = '1.12.2-R0.1-SNAPSHOT'
        //version_bukkit = '1.12-pre2-SNAPSHOT' // Adds Recipe.getKey()
        //Y//version_bukkit = '1.11.2-R0.1-SNAPSHOT' // ItemMeta.localizedName
        //N//version_bukkit = '1.10.2-R0.1-SNAPSHOT' // No ItemMeta.localizedName
        //N//version_bukkit = '1.9.4-R0.1-SNAPSHOT'
        //version_bukkit = '1.8.8-R0.1-SNAPSHOT'
        //version_bukkit = '1.7.9-R0.3-SNAPSHOT'
        //version_bukkit = '1.7.5-R0.1-SNAPSHOT' // Adds Server.getPlayer(uuid)
        //N//version_bukkit = '1.7.2-R0.3-SNAPSHOT' // Adds Server.getUnsafe()
        //version_bukkit = '1.6.4-R2.1-SNAPSHOT'
        //version_bukkit = '1.5.2-R1.0'
        //version_bukkit = '1.5.2-R0.2-SNAPSHOT' // Adds ClickType, InventoryDragEvent
        //version_bukkit = '1.4.7-R1.1-SNAPSHOT'
        //version_bukkit = '1.4.5-R0.3-SNAPSHOT' // Adds Item.itemMeta
        //version_bukkit = '1.3.2-R2.1-SNAPSHOT'
        //version_bukkit = '1.2.5-R4.0'
        //version_bukkit = '1.2.5-R1.0'
        //version_bukkit = '1.1-R3'
        //version_bukkit = '1.0.1-R1'

        version_sponge = '7.0.0-20171207.130015-65'

        version_bstats_bukkit = '1.2'
        version_bstats_sponge = '1.2'

        version_klaxon = '0.30'

        version_dagger = '2.11'
        version_jsr250 = '1.0'
        version_javax_inject = '1'
        version_autoFactory = '1.0-beta5'

        version_junit5 = '5.0.0-M4'
        version_junit_vintage_engine = '4.12.0-M4'
        version_junit_runner = '1.0.0-M4'
        version_mockito = '2.8.47'
    }

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "gradle.plugin.org.spongepowered:spongegradle:$version_spongegradle"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$version_junit_runner"
        classpath "com.github.jengelman.gradle.plugins:shadow:$version_shadow"
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.md-5.net/content/repositories/public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.bstats.org/content/repositories/releases/' }
    maven { url 'http://repo.spongepowered.org/maven' }
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.8.1'

    compile "org.jetbrains.kotlin:kotlin-runtime:$version_kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"

    //compile "org.bukkit:bukkit:$version_bukkit"
    compile "org.spigotmc:spigot-api:$version_bukkit"

    compile "org.spongepowered:spongeapi:$version_sponge"

    compile "org.bstats:bstats-bukkit:$version_bstats_bukkit"
    compile "org.bstats:bstats-sponge:$version_bstats_sponge"

    compile "javax.annotation:jsr250-api:$version_jsr250"
    compile "javax.inject:javax.inject:$version_javax_inject"
    compile "com.google.dagger:dagger:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"
    compile "com.google.auto.factory:auto-factory:$version_autoFactory"

    compile "com.beust:klaxon:$version_klaxon"

    testCompile "org.junit.jupiter:junit-jupiter-api:$version_junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$version_junit5"
    testCompile "org.junit.platform:junit-platform-runner:$version_junit_runner"
    testCompile "org.mockito:mockito-core:$version_mockito"
}
sourceCompatibility = java_target
targetCompatibility = java_target

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).all {
    kotlinOptions.jvmTarget = java_target
}

task ktlint(type: JavaExec) {
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args = ['src/main/**/*.kt']
}

task ktlintFormat(type: JavaExec) {
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args = ['-F', 'src/main/**/*.kt']
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand(
                plugin_id: plugin_id,
                plugin_name: plugin_name,
                plugin_author: plugin_author,
                plugin_description: plugin_description,
                plugin_version: plugin_version,
                plugin_website: plugin_website
        )

        include 'plugin.yml'
    }
}

compileKotlin {
    dependsOn generateMetadata
}

kapt {
    mapDiagnosticLocations = true

    // Allows AutoFactory processor to work properly
    correctErrorTypes = true

    // Allows Sponge processor to work properly
    arguments {
        arg 'metadataOutputFile', generateMetadata.target // Put mcmod.info in correct folder
        arg 'extraMetadataFiles', generateMetadata.target // Fixes @Plugin warnings
    }
}

afterEvaluate {
    tasks.kaptKotlin.outputs.upToDateWhen { false }
}

sponge {
    plugin {
        id = plugin_id
        meta {
            name = plugin_name
            authors = [plugin_author]
            version = plugin_version
            description = plugin_description
            url = plugin_website
        }
    }
}

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    main.java.srcDirs += "$buildDir/generated/source/kapt/main"

    test.java.srcDirs += "src/test/kotlin"
}

// Use shadowJar instead of jar
jar {
    enabled = false
    dependsOn shadowJar
}

shadowJar {
    classifier(null)

    dependencies {
        exclude '__gen'

        include dependency("org.jetbrains.kotlin:kotlin-runtime:$version_kotlin")
        include dependency("org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin")
        include dependency("com.google.dagger:dagger:$version_dagger")
        include dependency("javax.inject:javax.inject:$version_javax_inject")
        include dependency("com.beust:klaxon:$version_klaxon")
        include dependency("org.bstats:bstats-bukkit:$version_bstats_bukkit")
        include dependency("org.bstats:bstats-sponge:$version_bstats_sponge")
    }

    def libs = 'net.benwoodworth.fastcraft.libs'
    relocate('kotlin', "${libs}.kotlin")
    relocate('dagger', "${libs}.dagger")
    relocate('javax.inject', "${libs}.javax.inject")
    relocate('com.beust.klaxon', "${libs}.com.beust.klaxon")
    relocate('org.bstats', "${libs}.org.bstats")
}
